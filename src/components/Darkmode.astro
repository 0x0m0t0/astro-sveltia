---
// https://github.com/Princesseuh/erika.florist
// https://docs.astro.build/en/tutorial/6-islands/2/
---


<div
	id="dark-mode-toggle"
	class="h-[24px] select-none hover:cursor-pointer hover:text-pinky-unicorny"
>
	
    <svg name="moon"  id="light-sun" class="hidden"   xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-sun"><circle cx="12" cy="12" r="4"/><path d="M12 2v2"/><path d="M12 20v2"/><path d="m4.93 4.93 1.41 1.41"/><path d="m17.66 17.66 1.41 1.41"/><path d="M2 12h2"/><path d="M20 12h2"/><path d="m6.34 17.66-1.41 1.41"/><path d="m19.07 4.93-1.41 1.41"/></svg>

    <svg name="moon"  id="dark-moon" class="hidden"  xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-moon"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"/></svg>


    <svg name="system" id="system-computer" class="hidden" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-cog"><path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z"/><path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"/><path d="M12 2v2"/><path d="M12 22v-2"/><path d="m17 20.66-1-1.73"/><path d="M11 10.27 7 3.34"/><path d="m20.66 17-1.73-1"/><path d="m3.34 7 1.73 1"/><path d="M14 12h8"/><path d="M2 12h2"/><path d="m20.66 7-1.73 1"/><path d="m3.34 17 1.73-1"/><path d="m17 3.34-1 1.73"/><path d="m11 13.73-4 6.93"/></svg>
    

</div>

<script>
	const darkModeToggler = document.getElementById("dark-mode-toggle") as HTMLDivElement;
	const darkMoon = document.getElementById("dark-moon");
	const lightSun = document.getElementById("light-sun");
	const systemComputer = document.getElementById("system-computer");

	type Theme = "dark" | "light" | "system";

	const getCurrentTheme = (): Theme =>{
		const theme = localStorage.getItem("theme");
		if (!theme) {
			return "system";
		}

		return theme as Theme;
	}

	const isSystemDark = window.matchMedia("(prefers-color-scheme: dark)").matches;

	const adjustIconForTheme = (theme: Theme)=> {
		if (theme === "light") {
			darkMoon?.classList.add("hidden");
			lightSun?.classList.remove("hidden");
			systemComputer?.classList.add("hidden");
		} else if (theme === "dark") {
			darkMoon?.classList.remove("hidden");
			lightSun?.classList.add("hidden");
			systemComputer?.classList.add("hidden");
		} 
        else {
			darkMoon?.classList.add("hidden");
			lightSun?.classList.add("hidden");
			systemComputer?.classList.remove("hidden");
		}
	}

	if (darkModeToggler) {
		const theme = getCurrentTheme();
		adjustIconForTheme(theme);

		darkModeToggler.addEventListener("click", () => {
			const theme = getCurrentTheme();
			if (theme === "dark") {
				localStorage.setItem("theme", "light");
				document.documentElement.classList.remove("dark");
			} else if (theme === "light") {
				localStorage.setItem("theme", "system");
				if (isSystemDark) {
					document.documentElement.classList.add("dark");
				} else {
					document.documentElement.classList.remove("dark");
				}
			} else {
				localStorage.setItem("theme", "dark");
				document.documentElement.classList.add("dark");
			}
			adjustIconForTheme(getCurrentTheme());
		});
	}
</script>