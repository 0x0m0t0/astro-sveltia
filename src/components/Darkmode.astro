---
// https://github.com/Princesseuh/erika.florist
// https://docs.astro.build/en/tutorial/6-islands/2/
---

<div
	id="dark-mode-toggle"
	class="absolute bottom-0 right-0 z-50 select-none p-4 hover:cursor-pointer"
>
	<svg
		id="sun"
		xmlns="http://www.w3.org/2000/svg"
		width="20"
		height="20"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="1.5"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="feather feather-sun"
		><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line
			x1="12"
			y1="21"
			x2="12"
			y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line
			x1="18.36"
			y1="18.36"
			x2="19.78"
			y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line
			x1="21"
			y1="12"
			x2="23"
			y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line
			x1="18.36"
			y1="5.64"
			x2="19.78"
			y2="4.22"></line></svg
	>
	<svg
		id="moon"
		xmlns="http://www.w3.org/2000/svg"
		width="20"
		height="20"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="1.5"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="feather feather-moon"
		><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg
	>
	<p id="system" class="text-xs">system</p>
</div>

<script>
	const darkModeToggler = document.getElementById('dark-mode-toggle') as HTMLDivElement
	const darkMoon = document.getElementById('moon')
	const lightSun = document.getElementById('sun')
	const systemComputer = document.getElementById('system')

	type Theme = 'dark' | 'light' | 'system'

	const getCurrentTheme = (): Theme => {
		const theme = localStorage.getItem('theme')
		if (!theme) {
			return 'system'
		}

		return theme as Theme
	}

	const isSystemDark = window.matchMedia('(prefers-color-scheme: dark)').matches

	const adjustIconForTheme = (theme: Theme) => {
		if (theme === 'light') {
			darkMoon?.classList.add('hidden')
			lightSun?.classList.remove('hidden')
			systemComputer?.classList.add('hidden')
		} else if (theme === 'dark') {
			darkMoon?.classList.remove('hidden')
			lightSun?.classList.add('hidden')
			systemComputer?.classList.add('hidden')
		} else {
			darkMoon?.classList.add('hidden')
			lightSun?.classList.add('hidden')
			systemComputer?.classList.remove('hidden')
		}
	}

	if (darkModeToggler) {
		const theme = getCurrentTheme()
		adjustIconForTheme(theme)

		darkModeToggler.addEventListener('click', () => {
			const theme = getCurrentTheme()
			if (theme === 'dark') {
				localStorage.setItem('theme', 'light')
				document.documentElement.classList.remove('dark')
			} else if (theme === 'light') {
				localStorage.setItem('theme', 'system')
				if (isSystemDark) {
					document.documentElement.classList.add('dark')
				} else {
					document.documentElement.classList.remove('dark')
				}
			} else {
				localStorage.setItem('theme', 'dark')
				document.documentElement.classList.add('dark')
			}
			adjustIconForTheme(getCurrentTheme())
		})
	}
</script>
